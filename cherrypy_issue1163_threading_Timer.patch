From f4bb35b5b731bdbec071b2b42ee401a39c978e04 Mon Sep 17 00:00:00 2001
From: til <tilman.boerner@gmx.net>
Date: Sat, 23 Feb 2013 12:21:22 +0100
Subject: [PATCH] patch

---
 _cpcompat.py       | 7 +++++++
 process/plugins.py | 4 ++--
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/_cpcompat.py b/_cpcompat.py
index ed24c1a..c6efc50 100644
--- a/_cpcompat.py
+++ b/_cpcompat.py
@@ -18,6 +18,7 @@ output.
 import os
 import re
 import sys
+import threading
 
 if sys.version_info >= (3, 0):
     py3k = True
@@ -316,3 +317,9 @@ except NameError:
     # Python 2
     def next(i):
         return i.next()
+
+if sys.version_info >= (3,3):
+    Timer = threading.Timer
+else:
+    # Python 3.2 and earlier
+    Timer = threading._Timer
diff --git a/process/plugins.py b/process/plugins.py
index ba618a0..ad98b8c 100644
--- a/process/plugins.py
+++ b/process/plugins.py
@@ -7,7 +7,7 @@ import sys
 import time
 import threading
 
-from cherrypy._cpcompat import basestring, get_daemon, get_thread_ident, ntob, set
+from cherrypy._cpcompat import basestring, get_daemon, get_thread_ident, ntob, set, Timer
 
 # _module__file__base is used by Autoreload to make
 # absolute any filenames retrieved from sys.modules which are not
@@ -421,7 +421,7 @@ class PIDFile(SimplePlugin):
             pass
 
 
-class PerpetualTimer(threading._Timer):
+class PerpetualTimer(Timer):
     """A responsive subclass of threading._Timer whose run() method repeats.
     
     Use this timer only when you really need a very interruptible timer;
-- 
1.8.1.4

